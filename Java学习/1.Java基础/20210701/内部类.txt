类的内部成员之5： 内部类
    1. Java中允许将一个类A声明在另一个类B中，则类A就是内部类，类B称为外部类

    2. 内部类的分类：成员内部类(静态、非静态) VS 局部内部类（方法内、代码块内、构造器内）

    3. 成员内部类：
        3.1 作为外部类的成员
            > 调用外部类的结构
                调用外部类的非静态属性
                    AA.this.eat()
                    类名.this.属性();
            > 可以被static修饰
            > 可以被四种不同的权限修饰


        3.2 作为一个类
            > 类内可以定义属性、方法、构造器等
            > 可以被final修饰，表示此类不能被继承。言外之意，不使用final，就可以被继承
            > 具有类的所有功能
    4. 关注如下的3个问题
        4.1 如何实例化成员内部类的对象
            静态内部类
                A.B ab = new A.B();
            非静态内部类
                A a = new A();
                A.B ab = new a.new B();
        4.2 如何在成员内部类中区分调用外部类的结构
            public void methon(String name) {
                // 形参的
                name;
                // 内部类的属性
                this.name;
                // 外部类的属性
                类名.this.name;
            }
        4.3 开发中局部内部类的使用

class Person {

    // 非静态成员内部类
    class DD {}

    // 静态成员内部类
    static class EE {}

    public void method() {
        // 局部内部类
        class AA {}
    }

    {
        // 局部内部类
        class BB {}
    }

    public Person() {
        // 局部内部类
        class CC {}
    }
    
}

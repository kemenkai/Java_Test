多线程安全锁3

使用同步方法解决实现Runnable接口的线程安全问题

关于同步方法的总结：
    1.同步方法仍然涉及到同步监视器，只是不需要我们显示的声明
    2.非静态的同步方法，同步监视器是：this
    3.静态的同步方法，同步监视器是：当前类本身


class MThread implements Runnable{
    
    private int ticket = 100;

    public void run() {
        while(true) {
            show();
        }
    }

    private synchronized void show() { // 同步监视器：
        if(ticket > 0) {
            System.out.println(Thread.currentThread().getName() + 
            "卖票，票号为：" + ticket);
            ticket--;
        } 
    }
}

public class ThreadTest1{
    public static void main(String[] ages) {
        MThread m1 = new MThread();

        Thread t1 = new Thread(m1);
        Thread t2 = new Thread(m1);
        Thread t3 = new Thread(m1);

        t1.setName("窗口1");
        t2.setName("窗口2");
        t3.setName("窗口3");

        t1.start();
        t2.start();
        t3.start();
    }
}
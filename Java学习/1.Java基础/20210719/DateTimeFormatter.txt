DateTimeFormatter
DateTimeFormatter:格式化或解析日期、时间
    类似于SimpleDateFormat

// 实例化的方式有三种
    1.预定义的标准格式。 如：ISO_LOCAL_DATE_TIME;ISO_LOCAL_DATE;ISO_LOCAL_TIME
        DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
        // 格式化: 日期 --> 字符串
        LocalDateTime dateTime = LocalDateTime.now();
        String str1 = formatter.format(dateTime);
        System.out.println(dateTime);// 2019-02-18T15:42:18.797
        System.out.println(str1);// 2019-02-18T15:42:18.797

        // 解析: 字符串-->日期
        TemporalAccessor parse = formatt.parse("2019-02-18T15:42:18.797");
        System.out.println(parse);


    2.本地化相关的格式。
    本地化相关的格式。如：ofLocalizedDateTime()
    FormatStyle.LONG/ FormatStyle.MEDIUM / FormatStyle.SHORT: 适用于LocalDateTime
        DateTimeFormatter formatter1 = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT);
        DateTimeFormatter formatter2 = DateTimeFormatter.ofLocalizedDateTime(FormatStyle.LONG);
    // 格式化
        String str2 = formatter1.format(dateTime);
        String str3 = formatter2.format(dateTime);
        System.out.println(str2); // 19-2-18 下午3:47
        System.out.println(str3); // 2019年2月18日 下午03时47分16秒


    本地化相关的格式。如：ofLocalizedDate()
    FormatStyle.FULL / FormatStyle.LONG / FormatStyle.MEDIUM / FormatStyle.SHORT: 适用于localDate
        DateTimeFormatter formatter1 = DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL);
        // 格式化
        String str4 = formatter1.format(LocalDate.now());
        System.out.println(str4); // 2019年2月18日 星期一

    重点----3.自定义的格式。如：ofPattern("yyyy-MM-dd hh:mm:ss E")
        DateTimeFormatter format1 = DateTimeFormatter.ofPattern("yyyy-MM-dd hh:mm:ss");
        // 格式化
        String str1 = format1.format(LocalDateTime.now());
        System.out.println(str1);// 2019-02-18 03:52:09

        // 解析
        TemporalAccessor accessor = format1.parse("2019-02-18 03:52:09");
        System.out.println(accessor);
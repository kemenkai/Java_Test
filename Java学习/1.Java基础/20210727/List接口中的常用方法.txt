List接口中的常用方法


总结：常用方法
增: add(Object obj)
删: remove(int index) / remove(Object obj)
改: set(int index, Object ele)
查: get(int index)
插: add(int index, Object ele)
长度: size()
遍历: 1.Iterator迭代器方式
     2.增强for循环
     3.普通的循环


ArrayList list1 = new ArrayList();
list1.add(123);
list1.add(456);
list1.add("abc");
list1.add(123);
System.out.println(list1);

// void add(int index, Object ele)： 在index位置插入ele元素
list.add(1, "bb");

// boolean addAll(int index, Collection eles): 从index位置开始将eles中的所有元素添加进来
List<Integer> list2 = Arrays.asList(1,2,3);
list1.addAll(list2);
System.out.println(list1.size());

// Object get(int index): 获取指定index位置的元素
System.out.println(list1.get(0));

// int indexOf(Object obj): 返回obj在集合中首次出现的位置。如果不存在，返回-1
list1.indexOf(123);

// int lastIndexOf(Object obj): 返回obj在当前集合中末次出现的位置
list1.lastIndexOf(123);

// Object remove(int index): 移除指定index位置的元素，并返回此元素
list.remove(0);
// Object set(int index, Object ele): 设置指定index位置的元素为ele
list.set(1,"cc");
// List subList(int fromIndex, int toIndex): 返回从fromIndex到toIndex位置的左闭右开区间的子集合
list.subList(2,4);

面试题：
    区分List中remove(int index) 和 remove(Object obj)
    public void test() {
        List list = new ArrayList();
        list.add(1);
        list.add(2);
        list.add(3);
        updateList(list);
        System.out.println(list);
    }

    private void updateList(List list) {
        int var = 2;
        list.remove(var);
    }
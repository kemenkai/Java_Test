处理流之一：缓冲流的使用

1. 缓冲流
    BufferedInputStream
    BufferedOutputStream
    BufferedReader
    BufferedWriter
2. 作用：提供流的读取、写入的速度
    提高读写速度的原因：内部提供了一个缓冲区


BufferedReader().readLine();// 一次读一行，读取的数据不包含换行符


1. 造文件 
File srcFile = new File("a.jpg");
File destFile = new FIle("b.jpg");

2. 造流
2.1 造节点流
FileInputStream fis = new FileInputStream(srcFile);
FileOutputStream fos = new FileOutputStream(destFile);
2.2 造缓冲流
BufferedInputStream bis = new BufferedInputStream(fis);
BufferedOutputStream bos = new BufferedOutputStream(fos);

3. 复制的细节： 读取、写入
byte[] buffer = new byte[10];
int len;
while ((len = bis.read(buffer)) != -1) {
    bos.write(buffer , 0, len);
    // bos.flush();// 刷新缓冲区
}

4. 资源关闭
// 要求，先关闭外层的流，再关闭内层的流
bos.close();
bis.close();

// 说明：关闭外层流的同时，内层流也会自动的进行关闭。关于内层流的关闭，我们可以省略。
// fos.close();
// fis.close();



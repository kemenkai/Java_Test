TCP网络编程
例子1：
客户端：
1. 创建Socket对象, 指明服务器端的ip和端口号
InetAddress inet = InetAddress.getByName("127.0.0.1");
Socket socket = new Socket(inet, 8899);
2. 获取一个输出流，用于输出数据
OutputStream os = socket.getOutputStream();
3. 写出数据的操作
os.write("测试".getBytes());
4. 资源的关闭
os.close();
socket.close();

服务端：
1. 创建服务器端的ServerSocket, 指明自己的端口号
ServerSocket ss = new ServerSocket(8899);
2. 调用accept()表示接收来自于客户端的socket
Socket socket = ss.accept();
3. 获取输入流
InputStream is = socket.getInputStream();
4.读取输入流中的数据
ByteArrayOutputStream baos = new ByteArrayOutputStream();
byte[] buffer = new byte[5];
int len;
while((len = is.read(buffer)) != -1){
    baos.write(buffer, 0, len);
}
5.关闭资源
baos.close();
is.close();
socket.close();
ss.close();


例子2：客户端发送文件给服务端，服务端将文件保存在本地。
客户端
Socket socket = new Socket(InetAddress.getByName("127.0.0.1"), 9090);
OutputStream os = socket.getOutputStream();

FileInputStream fis = new FileInputStream(new File("a.jpg"));
byte[] buffer = new byte[1024];
int len;
while((len = fis.read(buffer)) != -1) {
    os.write(buffer, 0, len);
}
fis.close();
os.close();
socket.close();

服务端
1. 创建服务器端的ServerSocket, 指明自己的端口号
ServerSocket ss = new ServerSocket(9090);
2. 调用accept()表示接收来自于客户端的socket
Socket socket = ss.accept();
3. 获取输入流
InputStream is = socket.getInputStream();
4.读取输入流中的数据
FileOutputStream fos = new FileOutputStream(new File("b.jpg"));
byte[] buffer = new byte[1024];
int len;
while((len = is.read(buffer)) != -1){
    fos.write(buffer, 0, len);
}
5.关闭资源
fos.close();
is.close();
socket.close();
ss.close();


例子3：从客户端发送文件给服务端，服务端保存到本地。并返回"发送成功"给客户端。
并关闭相应的链接。

客户端
1.
Socket socket = new Socket(InetAddress.getByName("127.0.0.1"), 9090);
2.
OutputStream os = socket.getOutputStream();
3.
FileInputStream fis = new FileInputStream(new File("a.jpg"));
4.
byte[] buffer = new byte[1024];
int len;
while((len = fis.read(buffer)) != -1) {
    os.write(buffer, 0, len);
}
// 关闭数据的输出
socket.shutdownOutput();
5. 接受来自于服务器端的数据，并显示到控制台上
InputStream is = socket.getInputStream();
ByteArrayOutputStream baos = new ByteArrayOutputStream();
byte[] buffer = new byte[20];
int len;
while((len = is.read(buffer)) != -1) {
    baos.write(buffer, 0, len);
}
System.out.println(baos.toStream());
6.
baos.close();
fis.close();
os.close();
socket.close();

服务端
1. 创建服务器端的ServerSocket, 指明自己的端口号
ServerSocket ss = new ServerSocket(9090);
2. 调用accept()表示接收来自于客户端的socket
Socket socket = ss.accept();
3. 获取输入流
InputStream is = socket.getInputStream();
4.读取输入流中的数据
FileOutputStream fos = new FileOutputStream(new File("b.jpg"));
5.写入数据
byte[] buffer = new byte[1024];
int len;
while((len = is.read(buffer)) != -1){
    fos.write(buffer, 0, len);
}
6.服务器端给与客户端反馈
OutputStream os = socket.getOutputStream();
os.write("文件意见收到".getBytes());
6.关闭资源
os.close();
fos.close();
is.close();
socket.close();
ss.close();
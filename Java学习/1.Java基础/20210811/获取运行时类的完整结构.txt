获取运行时类的完整结构

// 父类
public class Creature<T> implements Serializable {
    private char gender;
    public double weight;

    private void breath() {
        System.out.println("呼吸");
    }

    public void eat() {
        System.out.println("吃");
    }
}

// 接口
public interface MyInterface {
    void info();
}

// 注解
@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE})
@Retention(RetentionPolicy.RUNTIME)
public @interface MyAnnotaion {
    String value() default "hello";
}


// 示例
@MyAnnotaion(value="hi")
public class Person extends Creature<String> implements Comparable<String>, MyInterface {

    private String name;
    int age;
    public int id;

    public Person() {}

    @MyAnnotaion(value="abc")
    private Person(String name) {
        this.name = name;
    }

    Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    @MyAnnotaion
    private String show(String nation) {
        System.out.println("我的国籍是: " + nation);
        return nation;
    }

    public String display(String interests) {
        System.out.println(interests);
        return insterests;
    }

    public void info() {
        System.out.println("我是一个人");
    }

    public int compareTo(String o) {
        return 0;
    }
}

public class FieldTest {
    
    @Test
    public void test1() {
        Class clazz = Person.class;

        // 获取属性结构
        // getFields(): 获取当前运行时类及其父类中声明为public访问权限的属性
        Field[] fields = clazz.getFields();
        for (Field f : fields) {
            System.out.println(f);
        }

        System.out.println();

        //getDeclaredFields(): 获取当前运行时类中声明的所有属性。（不包含父类中声明的属性）
        Field[] declaredFields = clazz.getDeclaredFields();
        for (Field f : declaredFields) {
            System.out.println(f);
        }
    }

    // 权限修饰符，数据类型，变量名 = ..
    @Test
    public void test2() {
        Class clazz = Person.class;

        //getDeclaredFields(): 获取当前运行时类中声明的所有属性。（不包含父类中声明的属性）
        Field[] declaredFields = clazz.getDeclaredFields();
        for (Field f : declaredFields) {
            // 1. 权限修饰符
            int modifier = f.getModifiers();
            System.out.print(Modifier.toString(modifier) + "\t");

            // 2. 数据类型
            Class type = f.getTypee();
            System.out.print(type.getName() + "\t");

            // 3. 变量名
            String fName = f.getName();
            System.out.print(fName);

            System.out.println();
        }

    }
}
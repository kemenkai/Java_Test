单例设计模式：
    所谓类的单例设计模式，就是采取一定的方法保证在整个的软件系统中，堆某个类只能存在一个对象实例

2. 如何实现？

3. 区分饿汉式和懒汉式
    饿汉式:
        好处：饿汉式是线程安全的
        坏处：对象生命周期过长
    懒汉式:
        好处：延迟对象的创建
        目前的写法坏处：线程不安全 --> 到多线程内容时，再修改


2.1 单例模式的饿汉式实现
    2.1.1 私有化类的构造器
    private Bank(){
        
    }

    2.1.2 内部创建类的对象
    2.1.4 要求此对象也必须声明为静态的
    private static Bank instance = new Bank();

    2.1.3 提供公共的静态的方法，返回类的对象
    public static Bank getInstance() {
        return instance;
    }

2.2 单例模式的懒汉式实现
    class Order {
        2.2.1 私有化类的构造器
        private Order() {

        }

        2.2.2 声明当前类对象
        2.2.4 此对象也必须声明为static的
        private static Order instance = null;

        2.2.3 声明public、static的返回当前类对象的方法
        public static Order getInstance() {
            if(instance == null) {
                instance = new Order();
            }
            return instance;
        }
    }


